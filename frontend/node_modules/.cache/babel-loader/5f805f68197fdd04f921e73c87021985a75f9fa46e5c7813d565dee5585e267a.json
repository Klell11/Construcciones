{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yo_jj\\\\OneDrive\\\\Escritorio\\\\mern-app\\\\frontend\\\\src\\\\components\\\\Expositores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expositores() {\n  _s();\n  const [expositores, setExpositores] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Obtener todos los expositores\n    fetch(\"http://localhost:5000/api/expositores\").then(res => res.json()).then(data => setExpositores(data)).catch(err => console.error(\"Error al obtener expositores:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Expositores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/crear\"),\n      children: \"Crear Expositor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), expositores.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay expositores disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: expositores.map(expositor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [expositor.nombre, \" \", expositor.apellido, \" - \", expositor.concepto, \" (\", new Date(expositor.fecha).toLocaleDateString(), \")\"]\n      }, expositor._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Expositores, \"kFjV5f+eC6028bldvFC++7Li3bM=\", false, function () {\n  return [useNavigate];\n});\n_c = Expositores;\nexport default Expositores;\nvar _c;\n$RefreshReg$(_c, \"Expositores\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Expositores","_s","expositores","setExpositores","navigate","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","expositor","nombre","apellido","concepto","Date","fecha","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/yo_jj/OneDrive/Escritorio/mern-app/frontend/src/components/Expositores.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Expositores() {\r\n    const [expositores, setExpositores] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Obtener todos los expositores\r\n        fetch(\"http://localhost:5000/api/expositores\")\r\n            .then((res) => res.json())\r\n            .then((data) => setExpositores(data))\r\n            .catch((err) => console.error(\"Error al obtener expositores:\", err));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Expositores</h1>\r\n            <button onClick={() => navigate(\"/crear\")}>Crear Expositor</button>\r\n            {expositores.length === 0 ? (\r\n                <p>No hay expositores disponibles.</p>\r\n            ) : (\r\n                <ul>\r\n                    {expositores.map((expositor) => (\r\n                        <li key={expositor._id}>\r\n                            {expositor.nombre} {expositor.apellido} - {expositor.concepto} ({new Date(expositor.fecha).toLocaleDateString()})\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expositores;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,uCAAuC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKN,cAAc,CAACM,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,QAAQ,CAAE;MAAAU,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClEhB,WAAW,CAACkB,MAAM,KAAK,CAAC,gBACrBrB,OAAA;MAAAe,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtCnB,OAAA;MAAAe,QAAA,EACKZ,WAAW,CAACmB,GAAG,CAAEC,SAAS,iBACvBvB,OAAA;QAAAe,QAAA,GACKQ,SAAS,CAACC,MAAM,EAAC,GAAC,EAACD,SAAS,CAACE,QAAQ,EAAC,KAAG,EAACF,SAAS,CAACG,QAAQ,EAAC,IAAE,EAAC,IAAIC,IAAI,CAACJ,SAAS,CAACK,KAAK,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,GACpH;MAAA,GAFSN,SAAS,CAACO,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjB,EAAA,CA7BQD,WAAW;EAAA,QAECH,WAAW;AAAA;AAAAiC,EAAA,GAFvB9B,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}